name: Build and Release

on:
  push:
    tags:
      - "a*.*.*"
      - "b*.*.*"
      - "v*.*.*"

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.6"
          cache: true

      - name: Install dependencies
        run: flutter --disable-telemetry pub get

      - name: Build Windows exe
        run: flutter build windows --release

      - name: Upload the build artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Windows Build
          path: ./build/windows/runner/Release/flutter_randomizer.exe

  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.6"
          cache: true

      - name: Install dependencies
        run: flutter --disable-telemetry pub get

      - name: Build Android apk
        run: flutter build apk --release

      - name: Upload the apk build artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Apk Build
          path: ./build/app/outputs/apk/release/app-release.apk

      - name: Build Android appbundle
        run: flutter build appbundle --release

      - name: Upload the appbunlde build artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Appbundle Build
          path: ./build/app/outputs/bundle/release/app-release.aab

  create_release:
    runs-on: ubuntu-latest
    needs: [build_windows, build_android]
    steps:
      - uses: little-core-labs/get-git-tag@v3.0.1
        id: tagName

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GIT_TAG_NAME }}
          release_name: Release ${{ env.GIT_TAG_NAME }}
          body: |
            These are the release notes for ${{ env.GIT_TAG_NAME}}.
            Changelog:
              ${{ steps.commit_messages.outputs.messages }}
          draft: false
          prerelease: false
    outputs:
        upload_url: ${{ steps.create_release.outputs.upload_url }}

  upload_windows_assets:
      runs-on: ubuntu-latest
      needs: create_release
      steps:
      - name: Download Windows
        uses: actions/download-artifact@v3
        with:
          name: Windows Build
          path: ${{ github.workspace }}/release-assets
      - name: Echo upload_url
        run: echo ${{ needs.create_release.output.upload_url }}

      - name: Upload Release Assets
        id: upload_release_assets_windows        
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.output.upload_url }}
          asset_path: ${{ github.workspace }}/release-assets/flutter_randomizer.exe
          asset_name: flutter_randomizer.exe
          asset_content_type: application/octet-stream

  upload_apk:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Download Apk
        uses: actions/download-artifact@v3
        with:
          name: Apk Build
          path: ${{ github.workspace }}/release-assets

      - name: Upload Release Assets
        id: upload_release_assets_apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.output.upload_url }}
          asset_path: ${{ github.workspace }}/release-assets/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

  upload_appbundle:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Download Appbundle
        uses: actions/download-artifact@v3
        with:
          name: Appbundle Build
          path: ${{ github.workspace }}/release-assets

      - name: Upload Release Assets
        id: upload_release_assets_appbundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.output.upload_url }}
          asset_path: ${{ github.workspace }}/release-assets/app-release.aab
          asset_name: app-release.aab
          asset_content_type: application/vnd.android.package-archive
