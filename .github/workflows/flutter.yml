name: Build and Release

on:
  push:
    tags:
      - "**.*.*"

jobs:
  checkout_code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout code
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}

  build_windows:
    runs-on: windows-latest
    needs: checkout_code
    steps:
      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'

      - name: Install dependencies
        run: flutter --disable-telementry pub get

      - name: Build Windows exe
        run: flutter build windows --release

      - name: Upload the build artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Windows Build
          path: ./build/windows/runner/Release/flutter_randomizer.exe

  build_android:
    runs-on: ubuntu-latest
    needs: [checkout_code]
    steps:
      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}

      - name: Setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'

      - name: Install dependencies
        run: flutter --disable-telementry pub get

      - name: Build Android apk
        run: flutter build apk --release

      - name: Upload the apk build artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Apk Build
          path: ./build/app/outputs/apk/release/app-release.apk

      - name: Build Android apk
        run: flutter build appbundle --release

      - name: Upload the appbunlde build artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Apk Build
          path: ./build/app/outputs/bundle/release/app-release.aab

  create_release:
    runs-on: ubuntu-latest
    needs: [checkout_code, build_windows, build_android]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}
          body: |
            These are the release notes for ${{ steps.vars.outputs.tag }}.
            Changelog:
              ${{ steps.commit_messages.outputs.messages }}
          draft: false
          prerelease: false

      - name: Upload Assets
        id: upload_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            ./build/app/outputs/flutter-apk/release/app-release.apk
            ./build/app/outputs/bundle/release/app-release.aab
            ./build/windows/runner/Release/flutter_randomizer.exe
          asset_name: |
            app-release.apk
            app-release.abb
            flutter_randomizer.exe
          asset_content_type: |
            application/apk
            applicaton/abb
            application/exe
